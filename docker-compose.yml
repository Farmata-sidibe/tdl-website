services:
  mysql:
    image: mysql:latest
    container_name: tdl-db
    networks:
      - tdl-network
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - db_datas:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 90s

  tdl-api:
    build:
      context: ./tdlApi
      dockerfile: Dockerfile
    container_name: tdl-api
    networks:
      - tdl-network
    ports:
      - 8081:8081
    volumes:
      - ./tdlApi:/usr/src/app
    env_file:
      - .env
    command: npm start
    restart: always
    extra_hosts:
      - "tdl-api.local=127.0.0.1"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  tdl-app:
    build:
      context: ./tdl
      dockerfile: Dockerfile
    container_name: tdl-app
    networks:
      - tdl-network
    ports:
      - 8000:8000
    volumes:
      - ./tdl:/var/www/html
      - /var/www/html/node_modules
    depends_on:
      mysql:
        condition: service_healthy
      tdl-api:
        condition: service_healthy
    env_file: 
      - .env
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
    command: bash -c "composer install && php artisan migrate && npm run dev --host=0.0.0.0 --port=8000"
    restart: always
    extra_hosts:
      - "tdl.test=127.0.0.1"    

networks:
  tdl-network:
    driver: bridge

volumes:
  db_datas: